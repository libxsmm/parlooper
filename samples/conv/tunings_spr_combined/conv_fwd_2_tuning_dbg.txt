l =  2
line =  Afgbdec
CBFcount =  1
KBFcount =  1
HBFcount =  1
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 1), range(0, 4), range(0, 4)]
dbg: tuning_params =  [1, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdec']
cmd to execute =  ( ./conv_fwd Afgbdec 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbdcec
CBFcount =  1
KBFcount =  2
HBFcount =  1
WBFcount =  1
line =  Afgbdce
CBFcount =  1
KBFcount =  1
HBFcount =  1
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 1), range(0, 4), range(0, 4)]
dbg: tuning_params =  [1, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdce']
cmd to execute =  ( ./conv_fwd Afgbdce 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbdedc
CBFcount =  1
KBFcount =  1
HBFcount =  2
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 4), range(0, 4), range(0, 4)]
dbg: tuning_params =  [2, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 4
dbg: tuning_params =  [2, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 7
dbg: tuning_params =  [2, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 4
dbg: tuning_params =  [2, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 7
dbg: tuning_params =  [2, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 4
dbg: tuning_params =  [2, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 7
dbg: tuning_params =  [2, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 4
dbg: tuning_params =  [2, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 2 7
dbg: tuning_params =  [4, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 4 7
dbg: tuning_params =  [4, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 4 7
dbg: tuning_params =  [4, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 4 7
dbg: tuning_params =  [4, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 4 7
dbg: tuning_params =  [7, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 2
dbg: tuning_params =  [7, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 4
dbg: tuning_params =  [7, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 2
dbg: tuning_params =  [7, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 4
dbg: tuning_params =  [7, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 2
dbg: tuning_params =  [7, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 4
dbg: tuning_params =  [7, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 2
dbg: tuning_params =  [7, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 7 4
dbg: tuning_params =  [7, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 14 4
dbg: tuning_params =  [14, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 14 4
dbg: tuning_params =  [14, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 14 4
dbg: tuning_params =  [14, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdedc']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdedc'] 2 14 4
dbg: tuning_params =  [14, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdedc']
cmd to execute =  ( ./conv_fwd Afgbdedc 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbdecdc
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbdecd
CBFcount =  1
KBFcount =  1
HBFcount =  2
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 4), range(0, 4), range(0, 4)]
dbg: tuning_params =  [2, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 4
dbg: tuning_params =  [2, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 7
dbg: tuning_params =  [2, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 4
dbg: tuning_params =  [2, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 7
dbg: tuning_params =  [2, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 4
dbg: tuning_params =  [2, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 7
dbg: tuning_params =  [2, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 4
dbg: tuning_params =  [2, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 2 7
dbg: tuning_params =  [4, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 4 7
dbg: tuning_params =  [4, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 4 7
dbg: tuning_params =  [4, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 4 7
dbg: tuning_params =  [4, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 4 7
dbg: tuning_params =  [7, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 2
dbg: tuning_params =  [7, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 4
dbg: tuning_params =  [7, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 2
dbg: tuning_params =  [7, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 4
dbg: tuning_params =  [7, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 2
dbg: tuning_params =  [7, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 4
dbg: tuning_params =  [7, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 2
dbg: tuning_params =  [7, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 7 4
dbg: tuning_params =  [7, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 14 4
dbg: tuning_params =  [14, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 14 4
dbg: tuning_params =  [14, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 14 4
dbg: tuning_params =  [14, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdecd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdecd'] 2 14 4
dbg: tuning_params =  [14, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdecd']
cmd to execute =  ( ./conv_fwd Afgbdecd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbdcedc
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbdcecd
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbdcdec
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbdcdce
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbdcde
CBFcount =  1
KBFcount =  1
HBFcount =  2
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 4), range(0, 4), range(0, 4)]
dbg: tuning_params =  [2, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 4
dbg: tuning_params =  [2, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 7
dbg: tuning_params =  [2, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 4
dbg: tuning_params =  [2, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 7
dbg: tuning_params =  [2, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 4
dbg: tuning_params =  [2, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 7
dbg: tuning_params =  [2, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 4
dbg: tuning_params =  [2, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 2 7
dbg: tuning_params =  [4, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 4 7
dbg: tuning_params =  [4, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 4 7
dbg: tuning_params =  [4, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 4 7
dbg: tuning_params =  [4, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 4 7
dbg: tuning_params =  [7, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 2
dbg: tuning_params =  [7, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 4
dbg: tuning_params =  [7, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 2
dbg: tuning_params =  [7, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 4
dbg: tuning_params =  [7, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 2
dbg: tuning_params =  [7, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 4
dbg: tuning_params =  [7, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 2
dbg: tuning_params =  [7, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 7 4
dbg: tuning_params =  [7, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 14 4
dbg: tuning_params =  [14, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 14 4
dbg: tuning_params =  [14, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 14 4
dbg: tuning_params =  [14, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdcde']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdcde'] 2 14 4
dbg: tuning_params =  [14, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdcde']
cmd to execute =  ( ./conv_fwd Afgbdcde 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbdced
CBFcount =  1
KBFcount =  1
HBFcount =  2
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 4), range(0, 4), range(0, 4)]
dbg: tuning_params =  [2, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 4
dbg: tuning_params =  [2, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 7
dbg: tuning_params =  [2, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 4
dbg: tuning_params =  [2, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 7
dbg: tuning_params =  [2, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 4
dbg: tuning_params =  [2, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 7
dbg: tuning_params =  [2, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 4
dbg: tuning_params =  [2, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 2 7
dbg: tuning_params =  [4, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 4 7
dbg: tuning_params =  [4, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 4 7
dbg: tuning_params =  [4, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 4 7
dbg: tuning_params =  [4, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 4 7
dbg: tuning_params =  [7, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 2
dbg: tuning_params =  [7, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 4
dbg: tuning_params =  [7, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 2
dbg: tuning_params =  [7, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 4
dbg: tuning_params =  [7, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 2
dbg: tuning_params =  [7, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 4
dbg: tuning_params =  [7, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 2
dbg: tuning_params =  [7, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 7 4
dbg: tuning_params =  [7, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 14 4
dbg: tuning_params =  [14, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 14 4
dbg: tuning_params =  [14, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 14 4
dbg: tuning_params =  [14, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbdced']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbdced'] 2 14 4
dbg: tuning_params =  [14, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbdced']
cmd to execute =  ( ./conv_fwd Afgbdced 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbedc
CBFcount =  1
KBFcount =  1
HBFcount =  1
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 1), range(0, 4), range(0, 4)]
dbg: tuning_params =  [1, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedc']
cmd to execute =  ( ./conv_fwd Afgbedc 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbedcdc
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbedcd
CBFcount =  1
KBFcount =  1
HBFcount =  2
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 4), range(0, 4), range(0, 4)]
dbg: tuning_params =  [2, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 4
dbg: tuning_params =  [2, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 7
dbg: tuning_params =  [2, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 4
dbg: tuning_params =  [2, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 7
dbg: tuning_params =  [2, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 4
dbg: tuning_params =  [2, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 7
dbg: tuning_params =  [2, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 4
dbg: tuning_params =  [2, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 2 7
dbg: tuning_params =  [4, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 4 7
dbg: tuning_params =  [4, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 4 7
dbg: tuning_params =  [4, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 4 7
dbg: tuning_params =  [4, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 4 7
dbg: tuning_params =  [7, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 2
dbg: tuning_params =  [7, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 4
dbg: tuning_params =  [7, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 2
dbg: tuning_params =  [7, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 4
dbg: tuning_params =  [7, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 2
dbg: tuning_params =  [7, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 4
dbg: tuning_params =  [7, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 2
dbg: tuning_params =  [7, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 7 4
dbg: tuning_params =  [7, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 14 4
dbg: tuning_params =  [14, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 14 4
dbg: tuning_params =  [14, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 14 4
dbg: tuning_params =  [14, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbedcd']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbedcd'] 2 14 4
dbg: tuning_params =  [14, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbedcd']
cmd to execute =  ( ./conv_fwd Afgbedcd 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbecdc
CBFcount =  1
KBFcount =  2
HBFcount =  1
WBFcount =  1
line =  Afgbecdcd
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbecd
CBFcount =  1
KBFcount =  1
HBFcount =  1
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 1), range(0, 4), range(0, 4)]
dbg: tuning_params =  [1, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbecd']
cmd to execute =  ( ./conv_fwd Afgbecd 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbcdedc
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbcdecd
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbcdec
CBFcount =  1
KBFcount =  2
HBFcount =  1
WBFcount =  1
line =  Afgbcdce
CBFcount =  1
KBFcount =  2
HBFcount =  1
WBFcount =  1
line =  Afgbcdcde
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbcdced
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbcedc
CBFcount =  1
KBFcount =  2
HBFcount =  1
WBFcount =  1
line =  Afgbcedcd
CBFcount =  1
KBFcount =  2
HBFcount =  2
WBFcount =  1
line =  Afgbcecd
CBFcount =  1
KBFcount =  2
HBFcount =  1
WBFcount =  1
line =  Afgbced
CBFcount =  1
KBFcount =  1
HBFcount =  1
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 1), range(0, 4), range(0, 4)]
dbg: tuning_params =  [1, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbced']
cmd to execute =  ( ./conv_fwd Afgbced 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbcded
CBFcount =  1
KBFcount =  1
HBFcount =  2
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 4), range(0, 4), range(0, 4)]
dbg: tuning_params =  [2, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 4
dbg: tuning_params =  [2, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 7
dbg: tuning_params =  [2, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 4
dbg: tuning_params =  [2, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 7
dbg: tuning_params =  [2, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 4
dbg: tuning_params =  [2, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 7
dbg: tuning_params =  [2, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 2 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [2, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 4
dbg: tuning_params =  [2, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 2 7
dbg: tuning_params =  [4, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 4 7
dbg: tuning_params =  [4, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 4 7
dbg: tuning_params =  [4, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 4 7
dbg: tuning_params =  [4, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 4 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [4, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 4 7
dbg: tuning_params =  [7, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 2
dbg: tuning_params =  [7, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 4
dbg: tuning_params =  [7, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 2
dbg: tuning_params =  [7, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 4
dbg: tuning_params =  [7, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 2
dbg: tuning_params =  [7, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 4
dbg: tuning_params =  [7, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [7, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 2
dbg: tuning_params =  [7, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 7 4
dbg: tuning_params =  [7, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 7 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 14 4
dbg: tuning_params =  [14, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 14 4
dbg: tuning_params =  [14, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 14 4
dbg: tuning_params =  [14, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [14, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcded']
bad config, h_in_gemm does not divide h_block as loop string, h blocking factor count, h_block, h_in_gemm =  ['Afgbcded'] 2 14 4
dbg: tuning_params =  [14, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcded']
cmd to execute =  ( ./conv_fwd Afgbcded 56 56 56 64 64 1 1 1 1 0 0 32 32 14 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

line =  Afgbcde
CBFcount =  1
KBFcount =  1
HBFcount =  1
WBFcount =  1
range_list =  [range(0, 1), range(0, 1), range(0, 1), range(0, 4), range(0, 4)]
dbg: tuning_params =  [1, 1, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 1, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 1 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 2, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 2 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 4, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 4 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 1, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 1 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 2, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 2 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 4, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 4 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 
dbg: tuning_params =  [1, 8, 1, 1, 7, 0]
dbg: tuning_string =  ['Afgbcde']
cmd to execute =  ( ./conv_fwd Afgbcde 56 56 56 64 64 1 1 1 1 0 0 32 32 1 8 1 1 7 0 1000 ) >> conv_fwd_2_tuning_dbg.txt 

script version, l, config_name, nlines, ncombinations =  v1 2 conv_fwd_general 30 336
=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.1896e-05,34338,59402.722718,59409.058834,0.063333,477326.157510,0.000134,475135.000000,0.002852
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60778.97496506824245443568
L1 test       : 60767.24243458174169063568
L2 abs.error  : 0.065263707483368460504636
L2 rel.error  : 138050.935679713264107704162598
Linf abs.error: 0.000173125416040420532227
Linf rel.error: 98305.000000000000000000000000
Check-norm    : 0.002871843193515219265499
Validation PASSED
GFLOPS 25612.3 Afgbdced_hb=2_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.617e-05,25612,60778.974965,60767.242435,0.065264,138050.935680,0.000173,98305.000000,0.002872
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57006.37690559751354157925
L1 test       : 57005.94773598294705152512
L2 abs.error  : 0.060764451888593210004963
L2 rel.error  : 11962.409309037268030806444585
Linf abs.error: 0.000129990279674530029297
Linf rel.error: 6033.285714285714675497729331
Check-norm    : 0.002850322466046277709861
Validation PASSED
GFLOPS 14440.4 Afgbdced_hb=2_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,9.9627e-05,14440,57006.376906,57005.947736,0.060764,11962.409309,0.000130,6033.285714,0.002850
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 62096.43963754780997987837
L1 test       : 62103.59578957164194434881
L2 abs.error  : 0.065827234839928361331829
L2 rel.error  : 23288.495422273499571019783616
Linf abs.error: 0.000136215239763259887695
Linf rel.error: 14541.799999999999272404238582
Check-norm    : 0.002835121035395125541068
Validation PASSED
GFLOPS 37216.5 Afgbdced_hb=4_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8656e-05,37216,62096.439638,62103.595790,0.065827,23288.495422,0.000136,14541.800000,0.002835
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60704.95099395173747325316
L1 test       : 60712.81071784812957048416
L2 abs.error  : 0.065564308591261430403385
L2 rel.error  : 28906.029394266155577497556806
Linf abs.error: 0.000153176486492156982422
Linf rel.error: 18912.882352941174758598208427
Check-norm    : 0.002889748077611681547489
Validation PASSED
GFLOPS 39182.8 Afgbdced_hb=4_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.6716e-05,39183,60704.950994,60712.810718,0.065564,28906.029394,0.000153,18912.882353,0.002890
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 4 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58805.39692664926405996084
L1 test       : 58799.03008997905999422073
L2 abs.error  : 0.062220105338938049011066
L2 rel.error  : 36977.982310630657593719661236
Linf abs.error: 0.000122280791401863098145
Linf rel.error: 34200.599999999998544808477163
Check-norm    : 0.002828336014263412804409
Validation PASSED
GFLOPS 40664.9 Afgbdced_hb=4_wb=1_cb=1_kb=1_hg=4_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5378e-05,40665,58805.396927,58799.030090,0.062220,36977.982311,0.000122,34200.600000,0.002828
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59933.44248536650411551818
L1 test       : 59940.64418756589293479919
L2 abs.error  : 0.064252512859284932611459
L2 rel.error  : 74676.207578261004528030753136
Linf abs.error: 0.000137388706207275390625
Linf rel.error: 56660.333333333335758652538061
Check-norm    : 0.002867417712606050266000
Validation PASSED
GFLOPS 33586.6 Afgbdced_hb=4_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2834e-05,33587,59933.442485,59940.644188,0.064253,74676.207578,0.000137,56660.333333,0.002867
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58724.86918186988623347133
L1 test       : 58718.85516594955697655678
L2 abs.error  : 0.064110744404983252553443
L2 rel.error  : 12050.204674294256619759835303
Linf abs.error: 0.000138338655233383178711
Linf rel.error: 5904.154262902766276965849102
Check-norm    : 0.002921094326078173958328
Validation PASSED
GFLOPS 24809 Afgbdced_hb=4_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.7989e-05,24809,58724.869182,58718.855166,0.064111,12050.204674,0.000138,5904.154263,0.002921
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59213.60151619079988449812
L1 test       : 59216.70000695670023560524
L2 abs.error  : 0.064905648081749117705996
L2 rel.error  : 14841.141652025335133657790720
Linf abs.error: 0.000166088342666625976562
Linf rel.error: 8059.434782608695968519896269
Check-norm    : 0.002930604458462820506581
Validation PASSED
GFLOPS 14108.4 Afgbdced_hb=4_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010197,14108,59213.601516,59216.700007,0.064906,14841.141652,0.000166,8059.434783,0.002931
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57567.62936715417163213715
L1 test       : 57569.8295899340882897377
L2 abs.error  : 0.062403866606269342565128
L2 rel.error  : 17702.610795597200194606557488
Linf abs.error: 0.000131648033857345581055
Linf rel.error: 12019.526315789473301265388727
Check-norm    : 0.002898143650574980332429
Validation PASSED
GFLOPS 36932.8 Afgbdced_hb=7_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8953e-05,36933,57567.629367,57569.829590,0.062404,17702.610796,0.000132,12019.526316,0.002898
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58408.57240148651180788875
L1 test       : 58406.92172948014922440052
L2 abs.error  : 0.062260744804507613114897
L2 rel.error  : 46967.878872793626214843243361
Linf abs.error: 0.000144273042678833007812
Linf rel.error: 44666.904761904763290658593178
Check-norm    : 0.002852577116320832543994
Validation PASSED
GFLOPS 41151.6 Afgbdced_hb=7_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.496e-05,41152,58408.572401,58406.921729,0.062261,46967.878873,0.000144,44666.904762,0.002853
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59513.52262521540251327679
L1 test       : 59514.35837776109110563993
L2 abs.error  : 0.063714779334960322532133
L2 rel.error  : 65992.070836637794855050742626
Linf abs.error: 0.000129325315356254577637
Linf rel.error: 48177.761904761908226646482944
Check-norm    : 0.002863318842436324371953
Validation PASSED
GFLOPS 32604.7 Afgbdced_hb=7_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.4124e-05,32605,59513.522625,59514.358378,0.063715,65992.070837,0.000129,48177.761905,0.002863
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58621.23668956065375823528
L1 test       : 58627.16097823798190802336
L2 abs.error  : 0.062495361763760227946651
L2 rel.error  : 37814.946845004138594958931208
Linf abs.error: 0.000130983069539070129395
Linf rel.error: 26895.490566037737153237685561
Check-norm    : 0.002851021467468927306915
Validation PASSED
GFLOPS 24574.7 Afgbdced_hb=7_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.8542e-05,24575,58621.236690,58627.160978,0.062495,37814.946845,0.000131,26895.490566,0.002851
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57706.88077308167703449726
L1 test       : 57695.42514118179678916931
L2 abs.error  : 0.062208389392150641172829
L2 rel.error  : 18912.470260241978394333273172
Linf abs.error: 0.000126084312796592712402
Linf rel.error: 14117.571428571429350995458663
Check-norm    : 0.002882785596235588800734
Validation PASSED
GFLOPS 14062.8 Afgbdced_hb=7_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.0001023,14063,57706.880773,57695.425141,0.062208,18912.470260,0.000126,14117.571429,0.002883
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60781.70228550465253647417
L1 test       : 60777.13516822608653455973
L2 abs.error  : 0.064676166840845678018823
L2 rel.error  : 33764.474629141106561291962862
Linf abs.error: 0.000138871371746063232422
Linf rel.error: 31574.333333333332120673730969
Check-norm    : 0.002845924648012006143855
Validation PASSED
GFLOPS 36990.6 Afgbdced_hb=14_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8892e-05,36991,60781.702286,60777.135168,0.064676,33764.474629,0.000139,31574.333333,0.002846
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60260.84571762257110094652
L1 test       : 60262.24839153187349438667
L2 abs.error  : 0.064757716570280510204327
L2 rel.error  : 126667.784192520470242016017437
Linf abs.error: 0.000143595039844512939453
Linf rel.error: 120430.468634686345467343926430
Check-norm    : 0.002875455305117607246457
Validation PASSED
GFLOPS 38841.6 Afgbdced_hb=14_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.7039e-05,38842,60260.845718,60262.248392,0.064758,126667.784193,0.000144,120430.468635,0.002875
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60140.50006338344246614724
L1 test       : 60137.16557943157386034727
L2 abs.error  : 0.065306034576809737779435
L2 rel.error  : 79079.227336702620959840714931
Linf abs.error: 0.000143889337778091430664
Linf rel.error: 51542.333333333335758652538061
Check-norm    : 0.002904192176674398519903
Validation PASSED
GFLOPS 40388.4 Afgbdced_hb=14_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.562e-05,40388,60140.500063,60137.165579,0.065306,79079.227337,0.000144,51542.333333,0.002904
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59989.84789088649267796427
L1 test       : 59995.4396329482551664114
L2 abs.error  : 0.065342879748119031546594
L2 rel.error  : 22896.633126061173243215307593
Linf abs.error: 0.000142691656947135925293
Linf rel.error: 19113.666666666667879326269031
Check-norm    : 0.002913264658590469964594
Validation PASSED
GFLOPS 33044.5 Afgbdced_hb=14_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.3537e-05,33044,59989.847891,59995.439633,0.065343,22896.633126,0.000143,19113.666667,0.002913
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59346.27232132111384999007
L1 test       : 59340.58825835864990949631
L2 abs.error  : 0.063761933011088095524244
L2 rel.error  : 68510.037568877261946909129620
Linf abs.error: 0.000153854489326477050781
Linf rel.error: 66627.266666666662786155939102
Check-norm    : 0.002873567435312199963571
Validation PASSED
GFLOPS 24790.6 Afgbdced_hb=14_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.8032e-05,24791,59346.272321,59340.588258,0.063762,68510.037569,0.000154,66627.266667,0.002874
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbdced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59441.98439051299646962434
L1 test       : 59440.99815574928652495146
L2 abs.error  : 0.064615105412476225854590
L2 rel.error  : 17784.530414497075980762019753
Linf abs.error: 0.000141259282827377319336
Linf rel.error: 13405.008626001232187263667583
Check-norm    : 0.002908065914898848563358
Validation PASSED
GFLOPS 14045.6 Afgbdced_hb=14_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010243,14046,59441.984391,59440.998156,0.064615,17784.530414,0.000141,13405.008626,0.002908
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedc
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61862.56916951484890887514
L1 test       : 61862.8040114713367074728
L2 abs.error  : 0.066579989592026364575439
L2 rel.error  : 15385.061588069735080352984369
Linf abs.error: 0.000133201479911804199219
Linf rel.error: 8803.045977011493960162624717
Check-norm    : 0.002877984859391038031246
Validation PASSED
GFLOPS 38156.9 Afgbedc_hb=1_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.7703e-05,38157,61862.569170,61862.804011,0.066580,15385.061588,0.000133,8803.045977,0.002878
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedc
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58336.36282252670935122296
L1 test       : 58341.36636135925073176622
L2 abs.error  : 0.063608294183178246128385
L2 rel.error  : 15893.931360932256211526691914
Linf abs.error: 0.000135544687509536743164
Linf rel.error: 8851.285714285713766003027558
Check-norm    : 0.002917502820261268833141
Validation PASSED
GFLOPS 40506.7 Afgbedc_hb=1_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5516e-05,40507,58336.362823,58341.366361,0.063608,15893.931361,0.000136,8851.285714,0.002918
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 4 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedc
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59863.01908836256188806146
L1 test       : 59861.02676736365538090467
L2 abs.error  : 0.064274697575692277262682
L2 rel.error  : 29536.873186457090923795476556
Linf abs.error: 0.000137146562337875366211
Linf rel.error: 17665.000000000000000000000000
Check-norm    : 0.002872681039558032823483
Validation PASSED
GFLOPS 42034.9 Afgbedc_hb=1_wb=1_cb=1_kb=1_hg=4_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.4225e-05,42035,59863.019088,59861.026767,0.064275,29536.873186,0.000137,17665.000000,0.002873
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedc
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61436.88743666026857681572
L1 test       : 61446.89554590510670095682
L2 abs.error  : 0.066669683677557323164820
L2 rel.error  : 71294.229772299353498965501785
Linf abs.error: 0.000153571367263793945312
Linf rel.error: 65178.826086956520157400518656
Check-norm    : 0.002902677153221051506438
Validation PASSED
GFLOPS 40426.4 Afgbedc_hb=1_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5587e-05,40426,61436.887437,61446.895546,0.066670,71294.229772,0.000154,65178.826087,0.002903
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedc
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59058.53760334855178371072
L1 test       : 59055.9165009387070313096
L2 abs.error  : 0.064357643059223923476253
L2 rel.error  : 144774.772452143719419836997986
Linf abs.error: 0.000123128294944763183594
Linf rel.error: 144434.708737864071736112236977
Check-norm    : 0.002915418478515259016748
Validation PASSED
GFLOPS 34397.8 Afgbedc_hb=1_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.1824e-05,34398,59058.537603,59055.916501,0.064358,144774.772452,0.000123,144434.708738,0.002915
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedc
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57762.46248646769527113065
L1 test       : 57764.42594077019020915031
L2 abs.error  : 0.061373634563736970126691
L2 rel.error  : 9242.158543887211635592393577
Linf abs.error: 0.000138692557811737060547
Linf rel.error: 3595.448979591836632607737556
Check-norm    : 0.002841922106078290013315
Validation PASSED
GFLOPS 25486.6 Afgbedc_hb=1_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.6447e-05,25487,57762.462486,57764.425941,0.061374,9242.158544,0.000139,3595.448980,0.002842
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedc
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59511.56756885363574838266
L1 test       : 59513.30511444085277616978
L2 abs.error  : 0.063277447769861300264083
L2 rel.error  : 11287.438103429005423095077276
Linf abs.error: 0.000151257961988449096680
Linf rel.error: 5919.000000000000000000000000
Check-norm    : 0.002842500242574940143986
Validation PASSED
GFLOPS 14138.2 Afgbedc_hb=1_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010176,14138,59511.567569,59513.305114,0.063277,11287.438103,0.000151,5919.000000,0.002843
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60513.79997943845955887809
L1 test       : 60521.21112719376105815172
L2 abs.error  : 0.065164595097454841576834
L2 rel.error  : 17318.524549962618038989603519
Linf abs.error: 0.000130707398056983947754
Linf rel.error: 6810.826086956521976389922202
Check-norm    : 0.002880114790527543190690
Validation PASSED
GFLOPS 37634 Afgbedcd_hb=2_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8227e-05,37634,60513.799979,60521.211127,0.065165,17318.524550,0.000131,6810.826087,0.002880
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59723.68968205027340445668
L1 test       : 59736.58710649691056460142
L2 abs.error  : 0.064845069659723392208051
L2 rel.error  : 26436.398891937944426899775863
Linf abs.error: 0.000138487666845321655273
Linf rel.error: 24732.538461538460978772491217
Check-norm    : 0.002904659580291524875045
Validation PASSED
GFLOPS 40539.9 Afgbedcd_hb=2_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5487e-05,40540,59723.689682,59736.587106,0.064845,26436.398892,0.000138,24732.538462,0.002905
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59949.13390742242336273193
L1 test       : 59945.44428340508602559566
L2 abs.error  : 0.064297730686700596547389
L2 rel.error  : 39498.478953340127191040664911
Linf abs.error: 0.000129688531160354614258
Linf rel.error: 33178.599999999998544808477163
Check-norm    : 0.002868035498963337343037
Validation PASSED
GFLOPS 34602.5 Afgbedcd_hb=2_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.1576e-05,34602,59949.133907,59945.444283,0.064298,39498.478953,0.000130,33178.600000,0.002868
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57589.92239888078620424494
L1 test       : 57581.54007909225765615702
L2 abs.error  : 0.062393853861890689882497
L2 rel.error  : 27348.851503337300528073683381
Linf abs.error: 0.000123985111713409423828
Linf rel.error: 25940.333333333332120673730969
Check-norm    : 0.002897519172597075396564
Validation PASSED
GFLOPS 25636.2 Afgbedcd_hb=2_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.6118e-05,25636,57589.922399,57581.540079,0.062394,27348.851503,0.000124,25940.333333,0.002898
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59590.98741183192760217935
L1 test       : 59585.37179317791014909744
L2 abs.error  : 0.065372960986123773707845
L2 rel.error  : 34048.862179617652145680040121
Linf abs.error: 0.000163394957780838012695
Linf rel.error: 32122.263157894736650632694364
Check-norm    : 0.002934467279610102931342
Validation PASSED
GFLOPS 14321.6 Afgbedcd_hb=2_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010045,14322,59590.987412,59585.371793,0.065373,34048.862180,0.000163,32122.263158,0.002934
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58141.33969773884018650278
L1 test       : 58136.34958892606664448977
L2 abs.error  : 0.062127253592649991920105
L2 rel.error  : 215788.820395535381976515054703
Linf abs.error: 0.000130569562315940856934
Linf rel.error: 208895.000000000000000000000000
Check-norm    : 0.002857957414283380983416
Validation PASSED
GFLOPS 37693.1 Afgbedcd_hb=4_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8167e-05,37693,58141.339698,58136.349589,0.062127,215788.820396,0.000131,208895.000000,0.002858
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59754.39378545155341271311
L1 test       : 59751.30547204497270286083
L2 abs.error  : 0.065988482661848535393290
L2 rel.error  : 40810.762037849839543923735619
Linf abs.error: 0.000137720257043838500977
Linf rel.error: 28331.666666666667879326269031
Check-norm    : 0.002953328524528628720724
Validation PASSED
GFLOPS 38999.7 Afgbedcd_hb=4_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.6889e-05,39000,59754.393785,59751.305472,0.065988,40810.762038,0.000138,28331.666667,0.002953
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 4 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61173.07209719764796318486
L1 test       : 61165.94101487705484032631
L2 abs.error  : 0.066183733892094989692545
L2 rel.error  : 12318.859454799516242928802967
Linf abs.error: 0.000152274966239929199219
Linf rel.error: 6543.183908045976750145200640
Check-norm    : 0.002891680141908407972867
Validation PASSED
GFLOPS 41207 Afgbedcd_hb=4_wb=1_cb=1_kb=1_hg=4_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.4913e-05,41207,61173.072097,61165.941015,0.066184,12318.859455,0.000152,6543.183908,0.002892
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60273.49864697826706105843
L1 test       : 60271.34428400511387735605
L2 abs.error  : 0.066611342469524104092926
L2 rel.error  : 64483.972675372438970953226089
Linf abs.error: 0.000130102038383483886719
Linf rel.error: 63233.000000000000000000000000
Check-norm    : 0.002955687632555352960251
Validation PASSED
GFLOPS 34104.8 Afgbedcd_hb=4_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2183e-05,34105,60273.498647,60271.344284,0.066611,64483.972675,0.000130,63233.000000,0.002956
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60679.28573854552814736962
L1 test       : 60683.14895642292685806751
L2 abs.error  : 0.065952381757437880671624
L2 rel.error  : 89359.637125646389904431998730
Linf abs.error: 0.000146660953760147094727
Linf rel.error: 85334.333333333328482694923878
Check-norm    : 0.002907444187811931719106
Validation PASSED
GFLOPS 25336.9 Afgbedcd_hb=4_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.6781e-05,25337,60679.285739,60683.148956,0.065952,89359.637126,0.000147,85334.333333,0.002907
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59531.99033047382545191795
L1 test       : 59547.16770733555313199759
L2 abs.error  : 0.063718346845693885072137
L2 rel.error  : 20766.110885322235844796523452
Linf abs.error: 0.000144090503454208374023
Linf rel.error: 13254.111111111111313221044838
Check-norm    : 0.002863855400458392794910
Validation PASSED
GFLOPS 14410.1 Afgbedcd_hb=4_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,9.9836e-05,14410,59531.990330,59547.167707,0.063718,20766.110885,0.000144,13254.111111,0.002864
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59739.55826830018486361951
L1 test       : 59751.1702445285627618432
L2 abs.error  : 0.065096472442432440352889
L2 rel.error  : 81719.222069114970508962869644
Linf abs.error: 0.000133797526359558105469
Linf rel.error: 65909.363636363632394932210445
Check-norm    : 0.002914762975986865973371
Validation PASSED
GFLOPS 37049.2 Afgbedcd_hb=7_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8831e-05,37049,59739.558268,59751.170245,0.065096,81719.222069,0.000134,65909.363636,0.002915
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 56737.86120117585232947022
L1 test       : 56741.33696012909058481455
L2 abs.error  : 0.061162390223992404991726
L2 rel.error  : 428475.361760577594395726919174
Linf abs.error: 0.000146087259054183959961
Linf rel.error: 428325.571428571420256048440933
Check-norm    : 0.002882377419526422485108
Validation PASSED
GFLOPS 41595.7 Afgbedcd_hb=7_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.4586e-05,41596,56737.861201,56741.336960,0.061162,428475.361761,0.000146,428325.571429,0.002882
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61290.59161926332308212295
L1 test       : 61285.71997291548177599907
L2 abs.error  : 0.066346955894958148380880
L2 rel.error  : 30099.737011783137859310954809
Linf abs.error: 0.000130958855152130126953
Linf rel.error: 24986.599999999998544808477163
Check-norm    : 0.002895833674527782154728
Validation PASSED
GFLOPS 34069.7 Afgbedcd_hb=7_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2227e-05,34070,61290.591619,61285.719973,0.066347,30099.737012,0.000131,24986.600000,0.002896
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61311.78129026042006444186
L1 test       : 61305.50036129995714873075
L2 abs.error  : 0.066071759094536539058673
L2 rel.error  : 45648.961613791951094754040241
Linf abs.error: 0.000148586928844451904297
Linf rel.error: 34781.070175438595470041036606
Check-norm    : 0.002881378842629964045358
Validation PASSED
GFLOPS 25666 Afgbedcd_hb=7_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.6053e-05,25666,61311.781290,61305.500361,0.066072,45648.961614,0.000149,34781.070175,0.002881
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57602.02817107349983416498
L1 test       : 57603.72363637789385393262
L2 abs.error  : 0.061621631954328563718359
L2 rel.error  : 313615.524999525048770010471344
Linf abs.error: 0.000152688473463058471680
Linf rel.error: 313343.000000000000000000000000
Check-norm    : 0.002860332403462812790595
Validation PASSED
GFLOPS 14361.8 Afgbedcd_hb=7_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010017,14362,57602.028171,57603.723636,0.061622,313615.525000,0.000153,313343.000000,0.002860
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59061.92893637483211932704
L1 test       : 59062.07641265448182821274
L2 abs.error  : 0.063280277106063972936134
L2 rel.error  : 219845.884371867548907175660133
Linf abs.error: 0.000131450593471527099609
Linf rel.error: 219546.600000000005820766091347
Check-norm    : 0.002864965177882454125391
Validation PASSED
GFLOPS 35265.1 Afgbedcd_hb=14_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.0795e-05,35265,59061.928936,59062.076413,0.063280,219845.884372,0.000131,219546.600000,0.002865
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58418.6059796061526867561
L1 test       : 58419.31135221011936664581
L2 abs.error  : 0.063255055139556218279928
L2 rel.error  : 13536.524203336100981687195599
Linf abs.error: 0.000121338292956352233887
Linf rel.error: 7796.612903225806803675368428
Check-norm    : 0.002896604886539879807755
Validation PASSED
GFLOPS 39196.6 Afgbedcd_hb=14_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.6703e-05,39197,58418.605980,58419.311352,0.063255,13536.524203,0.000121,7796.612903,0.002897
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59255.07332399658480426297
L1 test       : 59250.86740579945035278797
L2 abs.error  : 0.063959262603322464268985
L2 rel.error  : 20991.624651699454261688515544
Linf abs.error: 0.000131875276565551757812
Linf rel.error: 14855.826666666665914817713201
Check-norm    : 0.002888223926167871654508
Validation PASSED
GFLOPS 40246.4 Afgbedcd_hb=14_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5746e-05,40246,59255.073324,59250.867406,0.063959,20991.624652,0.000132,14855.826667,0.002888
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58478.23039875616086646914
L1 test       : 58481.08161094959359616041
L2 abs.error  : 0.063512130076079892360141
L2 rel.error  : 30203.157300442391715478152037
Linf abs.error: 0.000123673118650913238525
Linf rel.error: 26008.599999999998544808477163
Check-norm    : 0.002904280284064912186909
Validation PASSED
GFLOPS 33468.9 Afgbedcd_hb=14_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2985e-05,33469,58478.230399,58481.081611,0.063512,30203.157300,0.000124,26008.600000,0.002904
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58033.44078648577851708978
L1 test       : 58033.35691875568591058254
L2 abs.error  : 0.062059463792758048916731
L2 rel.error  : 18129.645492383824603166431189
Linf abs.error: 0.000151894986629486083984
Linf rel.error: 14237.476190476190822664648294
Check-norm    : 0.002858814138870329618625
Validation PASSED
GFLOPS 22957.6 Afgbedcd_hb=14_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,6.2665e-05,22958,58033.440786,58033.356919,0.062059,18129.645492,0.000152,14237.476190,0.002859
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbedcd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59104.00957889965502545238
L1 test       : 59113.28851865942124277353
L2 abs.error  : 0.063454715031465283581191
L2 rel.error  : 35616.810356215326464734971523
Linf abs.error: 0.000138975679874420166016
Linf rel.error: 24938.411764705881068948656321
Check-norm    : 0.002871686231357236350481
Validation PASSED
GFLOPS 14409.9 Afgbedcd_hb=14_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,9.9838e-05,14410,59104.009579,59113.288519,0.063455,35616.810356,0.000139,24938.411765,0.002872
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbecd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59489.63026133852690691128
L1 test       : 59498.31421103316824883223
L2 abs.error  : 0.063930127109623868797428
L2 rel.error  : 44732.866737259078945498913527
Linf abs.error: 0.000134848058223724365234
Linf rel.error: 37086.418181818182347342371941
Check-norm    : 0.002872952014205048826972
Validation PASSED
GFLOPS 37266.4 Afgbecd_hb=1_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8604e-05,37266,59489.630261,59498.314211,0.063930,44732.866737,0.000135,37086.418182,0.002873
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbecd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60687.39480531285516917706
L1 test       : 60690.73802227352280169725
L2 abs.error  : 0.064381201014896999312853
L2 rel.error  : 22285.947092054291715612635016
Linf abs.error: 0.000142473727464675903320
Linf rel.error: 15160.908045977012079674750566
Check-norm    : 0.002837149850628547815418
Validation PASSED
GFLOPS 40202.7 Afgbecd_hb=1_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5785e-05,40203,60687.394805,60690.738022,0.064381,22285.947092,0.000142,15160.908046,0.002837
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 4 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbecd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61930.6137673940829699859
L1 test       : 61934.88703099254053086042
L2 abs.error  : 0.065125790864513574685013
L2 rel.error  : 10098.585380836426338646560907
Linf abs.error: 0.000137977302074432373047
Linf rel.error: 4824.860627177700735046528280
Check-norm    : 0.002812938377938042043558
Validation PASSED
GFLOPS 40965.2 Afgbecd_hb=1_wb=1_cb=1_kb=1_hg=4_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5119e-05,40965,61930.613767,61934.887031,0.065126,10098.585381,0.000138,4824.860627,0.002813
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbecd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58561.94179298407834721729
L1 test       : 58568.41961375437676906586
L2 abs.error  : 0.064225165892937086109526
L2 rel.error  : 10257.931543823520769365131855
Linf abs.error: 0.000144820660352706909180
Linf rel.error: 3882.978994748687000537756830
Check-norm    : 0.002932792649440273732159
Validation PASSED
GFLOPS 41775 Afgbecd_hb=1_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.4438e-05,41775,58561.941793,58568.419614,0.064225,10257.931544,0.000145,3882.978995,0.002933
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbecd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60889.73261128017475130036
L1 test       : 60898.45010239258408546448
L2 abs.error  : 0.066437503479790604998811
L2 rel.error  : 54613.627540785033488646149635
Linf abs.error: 0.000162068754434585571289
Linf rel.error: 45874.199999999997089616954327
Check-norm    : 0.002918241621209551918403
Validation PASSED
GFLOPS 33829.6 Afgbecd_hb=1_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2526e-05,33830,60889.732611,60898.450102,0.066438,54613.627541,0.000162,45874.200000,0.002918
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbecd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61338.02740610626642592251
L1 test       : 61348.22134613280650228262
L2 abs.error  : 0.066517199358655812457819
L2 rel.error  : 13118.749828085348781314678490
Linf abs.error: 0.000130617991089820861816
Linf rel.error: 6777.591549295774711936246604
Check-norm    : 0.002899241445437691824111
Validation PASSED
GFLOPS 24622.7 Afgbecd_hb=1_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.8428e-05,24623,61338.027406,61348.221346,0.066517,13118.749828,0.000131,6777.591549,0.002899
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbecd
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60987.21003509082220261917
L1 test       : 60992.75245592650026082993
L2 abs.error  : 0.066237229928023000358195
L2 rel.error  : 11878.079794171197136165574193
Linf abs.error: 0.000134514644742012023926
Linf rel.error: 6271.554152823920048831496388
Check-norm    : 0.002905531886752057025430
Validation PASSED
GFLOPS 14141.6 Afgbecd_hb=1_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010173,14142,60987.210035,60992.752456,0.066237,11878.079794,0.000135,6271.554153,0.002906
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59003.4976923084250302054
L1 test       : 59005.4098999326815828681
L2 abs.error  : 0.062883900873913725626529
L2 rel.error  : 14229.584518840769305825233459
Linf abs.error: 0.000129383057355880737305
Linf rel.error: 10058.294117647059465525671840
Check-norm    : 0.002849986033949137870930
Validation PASSED
GFLOPS 37393.8 Afgbced_hb=1_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8473e-05,37394,59003.497692,59005.409900,0.062884,14229.584519,0.000129,10058.294118,0.002850
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59885.73595684127212734893
L1 test       : 59880.51191615220159292221
L2 abs.error  : 0.064526647271059944799276
L2 rel.error  : 24109.563720613812620285898447
Linf abs.error: 0.000132005661725997924805
Linf rel.error: 17748.333333333332120673730969
Check-norm    : 0.002881476880337874649229
Validation PASSED
GFLOPS 40040.2 Afgbced_hb=1_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.593e-05,40040,59885.735957,59880.511916,0.064527,24109.563721,0.000132,17748.333333,0.002881
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 4 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58791.52339870534342480823
L1 test       : 58801.73017544054891914129
L2 abs.error  : 0.064834969892514707212605
L2 rel.error  : 11763.397204977511137258261442
Linf abs.error: 0.000130634754896163940430
Linf rel.error: 8483.571428571429350995458663
Check-norm    : 0.002948253207147961615919
Validation PASSED
GFLOPS 41277.7 Afgbced_hb=1_wb=1_cb=1_kb=1_hg=4_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.4853e-05,41278,58791.523399,58801.730175,0.064835,11763.397205,0.000131,8483.571429,0.002948
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58825.48068788189993938431
L1 test       : 58834.04800046549644321203
L2 abs.error  : 0.063230140325424261105169
L2 rel.error  : 37488.165184439792938064783812
Linf abs.error: 0.000135924667119979858398
Linf rel.error: 26623.000000000000000000000000
Check-norm    : 0.002873395529732296598685
Validation PASSED
GFLOPS 40747.8 Afgbced_hb=1_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5306e-05,40748,58825.480688,58834.048000,0.063230,37488.165184,0.000136,26623.000000,0.002873
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58596.32582393180200597271
L1 test       : 58598.89389415469486266375
L2 abs.error  : 0.064194216466657766373416
L2 rel.error  : 24958.195644487412209855392575
Linf abs.error: 0.000132568180561065673828
Linf rel.error: 21960.111111111109494231641293
Check-norm    : 0.002929603343404623121832
Validation PASSED
GFLOPS 33857.3 Afgbced_hb=1_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2492e-05,33857,58596.325824,58598.893894,0.064194,24958.195644,0.000133,21960.111111,0.002930
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58590.93909177512978203595
L1 test       : 58586.38334608648438006639
L2 abs.error  : 0.062308962341851695243555
L2 rel.error  : 18551.217527252607396803796291
Linf abs.error: 0.000120008364319801330566
Linf rel.error: 12969.666666666666060336865485
Check-norm    : 0.002843839013553364075682
Validation PASSED
GFLOPS 24956.3 Afgbced_hb=1_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.7647e-05,24956,58590.939092,58586.383346,0.062309,18551.217527,0.000120,12969.666667,0.002844
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbced
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61200.32455367030343040824
L1 test       : 61193.28788695391267538071
L2 abs.error  : 0.065990141233961546740616
L2 rel.error  : 16726.278799081908800872042775
Linf abs.error: 0.000138066709041595458984
Linf rel.error: 9848.904761904761471669189632
Check-norm    : 0.002885015277701172276004
Validation PASSED
GFLOPS 14170.7 Afgbced_hb=1_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010152,14171,61200.324554,61193.287887,0.065990,16726.278799,0.000138,9848.904762,0.002885
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 62170.85064166567462962121
L1 test       : 62166.34266995452344417572
L2 abs.error  : 0.067408320976444169314590
L2 rel.error  : 83661.031042639966472052037716
Linf abs.error: 0.000146593898534774780273
Linf rel.error: 76289.000000000000000000000000
Check-norm    : 0.002900487404533457717198
Validation PASSED
GFLOPS 36735.9 Afgbcded_hb=2_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.9162e-05,36736,62170.850642,62166.342670,0.067408,83661.031043,0.000147,76289.000000,0.002900
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60324.2340871628257445991
L1 test       : 60321.24285803176462650299
L2 abs.error  : 0.065314089218797513614057
L2 rel.error  : 45216.061314278747886419296265
Linf abs.error: 0.000127684324979782104492
Linf rel.error: 35130.076923076921957544982433
Check-norm    : 0.002896439514437140674147
Validation PASSED
GFLOPS 39208.5 Afgbcded_hb=2_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.6692e-05,39208,60324.234087,60321.242858,0.065314,45216.061314,0.000128,35130.076923,0.002896
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58249.18991002697293879464
L1 test       : 58237.0162924609612673521
L2 abs.error  : 0.063286143352649579241209
L2 rel.error  : 21058.431585862930660368874669
Linf abs.error: 0.000120710581541061401367
Linf rel.error: 17368.040000000000873114913702
Check-norm    : 0.002905047896676730707216
Validation PASSED
GFLOPS 33523.4 Afgbcded_hb=2_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2915e-05,33523,58249.189910,58237.016292,0.063286,21058.431586,0.000121,17368.040000,0.002905
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58000.24185341259726556018
L1 test       : 57998.67576350574381649494
L2 abs.error  : 0.063847591918156934576167
L2 rel.error  : 138612.340628951089456677436829
Linf abs.error: 0.000135902315378189086914
Linf rel.error: 129025.000000000000000000000000
Check-norm    : 0.002943026863559272329751
Validation PASSED
GFLOPS 24954 Afgbcded_hb=2_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.7652e-05,24954,58000.241853,57998.675764,0.063848,138612.340629,0.000136,129025.000000,0.002943
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 2 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59669.42742592037393478677
L1 test       : 59679.28939368424471467733
L2 abs.error  : 0.064139496220561281747408
L2 rel.error  : 11120.631490730615041684359312
Linf abs.error: 0.000136993825435638427734
Linf rel.error: 8077.222222222222626442089677
Check-norm    : 0.002875265822106010983605
Validation PASSED
GFLOPS 14382.2 Afgbcded_hb=2_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010003,14382,59669.427426,59679.289394,0.064139,11120.631491,0.000137,8077.222222,0.002875
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59068.85459597144654253498
L1 test       : 59069.76372375921346247196
L2 abs.error  : 0.063406165681765616626286
L2 rel.error  : 14677.229684036206890596076846
Linf abs.error: 0.000130981206893920898438
Linf rel.error: 7814.836734693877588142640889
Check-norm    : 0.002870938481752126000823
Validation PASSED
GFLOPS 37067.2 Afgbcded_hb=4_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8812e-05,37067,59068.854596,59069.763724,0.063406,14677.229684,0.000131,7814.836735,0.002871
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60811.22050326798489550129
L1 test       : 60817.71727327915141358972
L2 abs.error  : 0.066437476709918993900139
L2 rel.error  : 10532.193339030141942203044891
Linf abs.error: 0.000143337994813919067383
Linf rel.error: 6445.163934426229388918727636
Check-norm    : 0.002921435647045971060326
Validation PASSED
GFLOPS 39304.7 Afgbcded_hb=4_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.6602e-05,39305,60811.220503,60817.717273,0.066437,10532.193339,0.000143,6445.163934,0.002921
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 1 1 1 4 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60240.30350141309463651851
L1 test       : 60242.46217758639249950647
L2 abs.error  : 0.064579057227187833256643
L2 rel.error  : 14189.939803957497133524157107
Linf abs.error: 0.000144824385643005371094
Linf rel.error: 12737.000000000000000000000000
Check-norm    : 0.002866866246406278660036
Validation PASSED
GFLOPS 40912.1 Afgbcded_hb=4_wb=1_cb=1_kb=1_hg=4_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5164e-05,40912,60240.303501,60242.462178,0.064579,14189.939804,0.000145,12737.000000,0.002867
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60255.36436022601264994591
L1 test       : 60251.24316720478236675262
L2 abs.error  : 0.064603075724439087967887
L2 rel.error  : 9941.635399985858384752646089
Linf abs.error: 0.000128114596009254455566
Linf rel.error: 5895.772486772486445261165500
Check-norm    : 0.002867156013513912256319
Validation PASSED
GFLOPS 33702.8 Afgbcded_hb=4_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2686e-05,33703,60255.364360,60251.243167,0.064603,9941.635400,0.000128,5895.772487,0.002867
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59515.11712104645994259045
L1 test       : 59527.7474855401087552309
L2 abs.error  : 0.064062771683840807890320
L2 rel.error  : 226126.020827454689424484968185
Linf abs.error: 0.000138800591230392456055
Linf rel.error: 217089.000000000000000000000000
Check-norm    : 0.002879981923848450205139
Validation PASSED
GFLOPS 24765.3 Afgbcded_hb=4_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.8091e-05,24765,59515.117121,59527.747486,0.064063,226126.020827,0.000139,217089.000000,0.002880
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 4 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61611.78838842391996877268
L1 test       : 61622.31399769533891230822
L2 abs.error  : 0.067076521935283892061896
L2 rel.error  : 21145.778827370490034809336066
Linf abs.error: 0.000155277550220489501953
Linf rel.error: 14156.294117647059465525671840
Check-norm    : 0.002912722443062223595667
Validation PASSED
GFLOPS 14106.5 Afgbcded_hb=4_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010198,14107,61611.788388,61622.313998,0.067077,21145.778827,0.000155,14156.294118,0.002913
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58335.45777611295488895848
L1 test       : 58333.09358052385505288839
L2 abs.error  : 0.062605098627537089650552
L2 rel.error  : 11612.801935165070972288958728
Linf abs.error: 0.000131729990243911743164
Linf rel.error: 5494.466666666666242235805839
Check-norm    : 0.002868648863793491279872
Validation PASSED
GFLOPS 37892.9 Afgbcded_hb=7_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.7966e-05,37893,58335.457776,58333.093581,0.062605,11612.801935,0.000132,5494.466667,0.002869
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59503.61506815155007643625
L1 test       : 59504.14158236823277547956
L2 abs.error  : 0.064899144035820657827607
L2 rel.error  : 77859.589219440444139763712883
Linf abs.error: 0.000135190784931182861328
Linf rel.error: 77311.000000000000000000000000
Check-norm    : 0.002916836530414910252235
Validation PASSED
GFLOPS 40328 Afgbcded_hb=7_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5674e-05,40328,59503.615068,59504.141582,0.064899,77859.589219,0.000135,77311.000000,0.002917
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57135.74701471422304166481
L1 test       : 57134.67483973375055938959
L2 abs.error  : 0.061687166164209612795322
L2 rel.error  : 72659.265551578180748037993908
Linf abs.error: 0.000119535252451896667480
Linf rel.error: 71542.466666666659875772893429
Check-norm    : 0.002886220519836661668744
Validation PASSED
GFLOPS 33761.9 Afgbcded_hb=7_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2612e-05,33762,57135.747015,57134.674840,0.061687,72659.265552,0.000120,71542.466667,0.002886
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57755.01767802733229473233
L1 test       : 57770.6789066860219463706
L2 abs.error  : 0.063296197206941753887754
L2 rel.error  : 635445.819156927755102515220642
Linf abs.error: 0.000135973095893859863281
Linf rel.error: 634879.000000000000000000000000
Check-norm    : 0.002930066482096635449572
Validation PASSED
GFLOPS 24352.4 Afgbcded_hb=7_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.9076e-05,24352,57755.017678,57770.678907,0.063296,635445.819157,0.000136,634879.000000,0.002930
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 7 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59557.62294095294055296108
L1 test       : 59552.88121232890989631414
L2 abs.error  : 0.063449187782621027653640
L2 rel.error  : 13730.996993512446351815015078
Linf abs.error: 0.000135406851768493652344
Linf rel.error: 9410.729729729730024700984359
Check-norm    : 0.002849128116434656004391
Validation PASSED
GFLOPS 14047 Afgbcded_hb=7_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010242,14047,59557.622941,59552.881212,0.063449,13730.996994,0.000135,9410.729730,0.002849
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 62486.20502546904026530683
L1 test       : 62497.76377743901684880257
L2 abs.error  : 0.066939087500737695646258
L2 rel.error  : 36989.856095262031885795295238
Linf abs.error: 0.000150125473737716674805
Linf rel.error: 31494.456310679612215608358383
Check-norm    : 0.002865883489332102674468
Validation PASSED
GFLOPS 37370.6 Afgbcded_hb=14_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8497e-05,37371,62486.205025,62497.763777,0.066939,36989.856095,0.000150,31494.456311,0.002866
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 58888.25576523245399584994
L1 test       : 58881.37371545762289315462
L2 abs.error  : 0.064521205574393863946270
L2 rel.error  : 26948.029422734904073877260089
Linf abs.error: 0.000155702233314514160156
Linf rel.error: 15551.000000000000000000000000
Check-norm    : 0.002929976290106959223303
Validation PASSED
GFLOPS 39119.6 Afgbcded_hb=14_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.6776e-05,39120,58888.255765,58881.373715,0.064521,26948.029423,0.000156,15551.000000,0.002930
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59669.49590097254258580506
L1 test       : 59672.61541464156471192837
L2 abs.error  : 0.064120560213060548426789
L2 rel.error  : 29237.751884694233012851327658
Linf abs.error: 0.000124577432870864868164
Linf rel.error: 25068.520000000000436557456851
Check-norm    : 0.002874710303445430180369
Validation PASSED
GFLOPS 40314.2 Afgbcded_hb=14_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5686e-05,40314,59669.495901,59672.615415,0.064121,29237.751885,0.000125,25068.520000,0.002875
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60551.67648556666972581297
L1 test       : 60557.1139673521975055337
L2 abs.error  : 0.064779597962061383209509
L2 rel.error  : 12279.014073804311919957399368
Linf abs.error: 0.000151414424180984497070
Linf rel.error: 7274.789473684210861392784864
Check-norm    : 0.002861982980710259423518
Validation PASSED
GFLOPS 33146.3 Afgbcded_hb=14_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.3403e-05,33146,60551.676486,60557.113967,0.064780,12279.014074,0.000151,7274.789474,0.002862
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59693.54243932045937981457
L1 test       : 59687.0578477977542206645
L2 abs.error  : 0.064213499928685510709236
L2 rel.error  : 10428.552456408586294855922461
Linf abs.error: 0.000122055411338806152344
Linf rel.error: 6605.707858428314466436859220
Check-norm    : 0.002877228510569240869238
Validation PASSED
GFLOPS 24738.7 Afgbcded_hb=14_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.8154e-05,24739,59693.542439,59687.057848,0.064213,10428.552456,0.000122,6605.707858,0.002877
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 14 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcded
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59565.42886677219939883798
L1 test       : 59567.7772915734676644206
L2 abs.error  : 0.064072973682401695993960
L2 rel.error  : 10273.565042381242164992727339
Linf abs.error: 0.000138781964778900146484
Linf rel.error: 4911.189602446483149833511561
Check-norm    : 0.002878592838583888657150
Validation PASSED
GFLOPS 14037.2 Afgbcded_hb=14_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010249,14037,59565.428867,59567.777292,0.064073,10273.565042,0.000139,4911.189602,0.002879
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcde
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59440.83796768467436777428
L1 test       : 59444.10733997088391333818
L2 abs.error  : 0.064033371905023617198793
L2 rel.error  : 159633.639892105769831687211990
Linf abs.error: 0.000136572867631912231445
Linf rel.error: 158719.000000000000000000000000
Check-norm    : 0.002880958252563334265339
Validation PASSED
GFLOPS 36911.2 Afgbcde_hb=1_wb=1_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.8976e-05,36911,59440.837968,59444.107340,0.064033,159633.639892,0.000137,158719.000000,0.002881
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 2 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcde
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 59653.41737448303319979459
L1 test       : 59660.86208114121109247208
L2 abs.error  : 0.064263390698167222048198
L2 rel.error  : 51779.370683353175991214811802
Linf abs.error: 0.000127789564430713653564
Linf rel.error: 35745.909090909088263288140297
Check-norm    : 0.002881365578732012280860
Validation PASSED
GFLOPS 39197.6 Afgbcde_hb=1_wb=1_cb=1_kb=1_hg=2_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.6702e-05,39198,59653.417374,59660.862081,0.064263,51779.370683,0.000128,35745.909091,0.002881
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 4 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcde
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60361.79785842220735503361
L1 test       : 60367.96363097603898495436
L2 abs.error  : 0.064190617493069979104803
L2 rel.error  : 50400.070898176010814495384693
Linf abs.error: 0.000144787132740020751953
Linf rel.error: 38870.627586206894193310290575
Check-norm    : 0.002844690824733115113582
Validation PASSED
GFLOPS 41167.2 Afgbcde_hb=1_wb=1_cb=1_kb=1_hg=4_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.4946e-05,41167,60361.797858,60367.963631,0.064191,50400.070898,0.000145,38870.627586,0.002845
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 1 1 1 7 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcde
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 60886.18548586829274427146
L1 test       : 60875.52382666000630706549
L2 abs.error  : 0.064941683746974135371666
L2 rel.error  : 17501.716112021415028721094131
Linf abs.error: 0.000126082450151443481445
Linf rel.error: 13768.111111111111313221044838
Check-norm    : 0.002853433874854100025381
Validation PASSED
GFLOPS 40586.9 Afgbcde_hb=1_wb=1_cb=1_kb=1_hg=7_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,3.5446e-05,40587,60886.185486,60875.523827,0.064942,17501.716112,0.000126,13768.111111,0.002853
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 2 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcde
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 62400.58022353648266289383
L1 test       : 62384.51701039657928049564
L2 abs.error  : 0.067712786389837589795526
L2 rel.error  : 18309.644450086005235789343715
Linf abs.error: 0.000142734497785568237305
Linf rel.error: 16271.222222222222626442089677
Check-norm    : 0.002903370182330663323844
Validation PASSED
GFLOPS 33704.8 Afgbcde_hb=1_wb=2_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,4.2684e-05,33705,62400.580224,62384.517010,0.067713,18309.644450,0.000143,16271.222222,0.002903
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 4 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcde
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 57881.63077754856203682721
L1 test       : 57888.32146747445221990347
L2 abs.error  : 0.063275279997696831646437
L2 rel.error  : 50088.567596695327665656805038
Linf abs.error: 0.000131491571664810180664
Linf rel.error: 35534.869209809265157673507929
Check-norm    : 0.002925163283910199758797
Validation PASSED
GFLOPS 24743 Afgbcde_hb=1_wb=4_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,5.8143e-05,24743,57881.630778,57888.321467,0.063275,50088.567597,0.000131,35534.869210,0.002925
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Test parameters: N H W C K R S stride_h stride_w  pad_h pad_w pad_h_in pad_w_in pad_h_out pad_w_out  bc bk zero_output_rims with_bias with_relu: 56  56 56 64 64  1 1 1 1  0 0 0 0 0 0  32 32  0  0 0
Tuning parameters: h_block w_block c_block k_block h_in_gemm pack_input logical_padding input_padding_copy: 1 8 1 1 1 0 0 0
Tuning parameters: avoid_rim_fmas: 0
Tuning string: Afgbcde
Extra parameters: avoid_racey_zeroing_in_rims: 0
##########################################
#           Correctness - FWD            #
##########################################
L1 reference  : 61126.35695683451922377571
L1 test       : 61136.01513172697741538286
L2 abs.error  : 0.065311699433586861696099
L2 rel.error  : 103561.393823258389602415263653
Linf abs.error: 0.000135550275444984436035
Linf rel.error: 100760.600000000005820766091347
Check-norm    : 0.002857720705084779416055
Validation PASSED
GFLOPS 13949.9 Afgbcde_hb=1_wb=8_cb=1_kb=1_hg=1_pu=0
PERFDUMP,FP,1.17-3587,56,56,64,64,56,56,1,1,1,0,0,0.00010313,13950,61126.356957,61136.015132,0.065312,103561.393823,0.000136,100760.600000,0.002858
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
Invalid input GEMM config: When multiple H pixels are handled in the gemm, then the full ofw should be also used as gemm_n...
